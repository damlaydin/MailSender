@model MailSender.Models.SendMailViewModel

@{
    ViewData["Title"] = "Send Mail";
}

<h1 class="text-center">Send Mail</h1>
<div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">
        <form asp-action="SendMail" asp-controller="Mail" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label asp-for="SenderEmail" class="control-label"></label>
                <input asp-for="SenderEmail" class="form-control" />
                <span asp-validation-for="SenderEmail" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Subject">Subject</label>
                <input type="text" id="Subject" name="Subject" class="form-control" value="@Model.Subject" />
                <span asp-validation-for="Subject" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SelectedGroupId" class="control-label">Select a Group</label>
                <select asp-for="SelectedGroupId" class="form-control" asp-items="Model.Groups">
                    <option value="">-- Select a Group --</option>
                </select>
                <span asp-validation-for="SelectedGroupId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Attachments">Attachments</label>
                <input type="file" id="Attachments" name="attachments" class="form-control" multiple />
            </div>
            <div class="form-group">
                <label for="Body">Body</label>
                <textarea id="Body" name="Body" class="form-control" rows="15"></textarea>
                <span asp-validation-for="Body" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Send Email</button>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        tinymce.init({
            selector: 'textarea',
            height: 400,
            plugins: 'link code lists advlist',
            toolbar: 'undo redo | bold italic | alignleft aligncenter alignright alignjustify | indent outdent | bullist numlist | link',

            setup: function (editor) {
                editor.on('init', function () {
                    editor.setContent('Hey {{FirstName}} {{LastName}}');
                });
            },

            formats: {
                h1: { block: "h1", styles: { fontSize: "32px" } },
                h2: { block: "h2", styles: { fontSize: "18px" } },
                cta: {
                    selector: "a",
                    styles: {
                        backgroundColor: "#706FD3",
                        padding: "12px 16px",
                        color: "#ffffff",
                        borderRadius: "4px",
                        textDecoration: "none",
                        display: "inline-block"
                    }
                }
            },
            style_formats: [
                { title: "Paragraph", format: "p" },
                { title: "Heading 1", format: "h1" },
                { title: "Heading 2", format: "h2" },
                { title: "Button styles" },
                { title: "Call-to-action", format: "cta" }
            ]
        });
    </script>
}
