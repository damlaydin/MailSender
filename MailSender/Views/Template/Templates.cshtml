@model MailSender.Models.TemplateSendViewModel

@{
    ViewData["Title"] = "Templates";
}

<h1>Templates</h1>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Subject</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var template in Model.Templates)
        {
            <!-- show template subjects -->
            <tr>
                <td>@template.Text</td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Actions
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" href="#" data-toggle="modal" data-target="#updateModal" data-name="@template.Value">
                                Update  <i class="fas fa-pencil-alt"></i>
                            </a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Template</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateTemplateForm">
                    <input type="hidden" id="templateName" name="templateName" />
                    <div class="form-group">
                        <label for="SelectedGroupNames">Select Groups</label>
                        <select asp-for="SelectedGroupNames" class="form-control js-select2" asp-items="Model.Groups" multiple="multiple" style="width: 100%;">
                        </select>
                        <span asp-validation-for="SelectedGroupNames" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="SelectedUserIds">Select Additional Users (optional)</label>
                        <select asp-for="SelectedUserIds" class="form-control js-select2" asp-items="Model.Users" multiple="multiple" style="width: 100%;">
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="templateContent">Content</label>
                        <textarea id="templateContent" name="templateContent" class="form-control"></textarea>
                    </div>
                    <!-- Popover Button -->
                    <button type="button" class="btn btn-secondary" data-container="body" data-toggle="popover" data-placement="right" data-content="Vivamus.">
                        <i class="fa-solid fa-circle-info"></i> Pop
                    </button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveTemplateButton">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        tinymce.init({
            selector: '#templateContent',
            height: 500,
            width: 1000,
            plugins: 'link code lists advlist image',
            toolbar: 'undo redo | bold italic | alignleft aligncenter alignright alignjustify | indent outdent | bullist numlist | link image',
            relative_urls: false,
            remove_script_host: false,
            convert_urls: false,
            document_base_url: '@Url.Content("~/")',
            setup: function (editor) {
                editor.on('init', function () {
                    var iframe = editor.getDoc().body;
                    iframe.style.transform = "scale(1.0)";
                });
            },
            file_picker_callback: function (callback, value, meta) {
                if (meta.filetype === 'image') {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'file');
                    input.setAttribute('accept', 'image/*');
                    input.onchange = function () {
                        var file = this.files[0];
                        var formData = new FormData();
                        formData.append('file', file);

                        fetch('@Url.Action("UploadImage", "Template")', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.json())
                            .then(result => {
                                if (result.location) {
                                    callback(result.location, { alt: file.name });
                                } else {
                                    alert('Upload failed');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while uploading the image');
                            });
                    };
                    input.click();
                }
            }
        });

        $('#updateModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var templateName = button.data('name');
            var modal = $(this);
            modal.find('#templateName').val(templateName);

            // Fetch the template content
            $.ajax({
                url: '@Url.Action("GetTemplateContent", "Template")',
                method: 'GET',
                data: { templateName: templateName },
                success: function (response) {
                    tinymce.get('templateContent').setContent(response.content);
                },
                error: function () {
                    alert('An error occurred while fetching the template content');
                }
            });
        });

        $('#saveTemplateButton').click(function () {
            var templateName = $('#templateName').val();
            var templateContent = tinymce.get('templateContent').getContent();

            $.ajax({
                url: '@Url.Action("UpdateTemplate", "Template")',
                method: 'POST',
                data: {
                    templateName: templateName,
                    templateContent: templateContent
                },
                success: function (response) {
                    alert('Template updated successfully');
                    $('#updateModal').modal('hide');
                },
                error: function () {
                    alert('An error occurred while updating the template');
                }
            });
        });

        $(document).ready(function () {
            $('.js-select2').select2({
                width: '100%' 
            });
            $('[data-toggle="popover"]').popover();
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
}
